---
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/emailservice:v0.3.1
        ports:
        - containerPort: 8080
          name: grpc
        env:
        - name: PORT
          value: "8080"
        # - name: DISABLE_TRACING
        #   value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 70m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: boutique
  annotations:
    a8r.io/description: "Sends users an order confirmation email (mock). Lanaguage = Python"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/matt-dw/sales-eng-google-boutique"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=frontend&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, frontend.boutique, checkoutservice.boutique, recommendationservice.boutique, paymentservice.boutique, productcatalogservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
        - name: server
          image: agervais/checkoutservice:v0.3.1
          ports:
          - containerPort: 5050
            name: grpc
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: JAEGER_SERVICE_ADDR
            value: "otel-collector.monitoring:14268"
          # - name: DISABLE_STATS
          #   value: "1"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          resources:
            requests:
              cpu: 70m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: boutique
  annotations:
    a8r.io/description: "Sends users an order confirmation email (mock). Lanaguage = Python"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"   # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=checkoutservice&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, productcatalogservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/recommendationservice:v0.3.1
        ports:
        - containerPort: 8080
          name: grpc
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: DISABLE_DEBUGGER
        #   value: "1"
        resources:
          requests:
            cpu: 70m
            memory: 220Mi
          limits:
            cpu: 100m
            memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: boutique
  annotations:
    a8r.io/description: "Retrieves user cart, prepares order and orchestrates the payment, shipping and the email notification. Lanaguage = Go"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=checkoutservice&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, frontend.boutique, checkoutservice.boutique, paymentservice.boutique, productcatalogservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        # getambassador.io/inject-traffic-agent: enabled
    spec:
      containers:
        - name: server
          image: ambmatt/frontend:v4
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          - name: ENV_PLATFORM
            value: "gcp"
          - name: JAEGER_SERVICE_ADDR
            value: "otel-collector.monitoring:14268"
          # - name: DISABLE_TRACING
          #   value: "1"
          # - name: DISABLE_PROFILER
          #   value: "1"
          resources:
            requests:
              cpu: 70m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: boutique
  annotations:
    a8r.io/description: "Exposes an HTTP server to serve the website. Does not require signup/login and generates session IDs for all users automatically. Lanaguage = Go"
    a8r.io/owner: "Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=frontend&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, emailservice.boutique, checkoutservice.boutique, recommendationservice.boutique, paymentservice.boutique, productcatalogservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: http
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: frontend
  namespace: boutique
spec:
  host: boutique.linkerd.mturner.k736.net      # Modify this for appropriate host
  prefix: /
  service: frontend.boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: boutique
  annotations:
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/paymentservice:v0.3.1
        ports:
        - containerPort: 50051
          name: grpc
        env:
        - name: PORT
          value: "50051"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 70m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: boutique
  annotations:
    a8r.io/description: "Charges the given credit card info (mock) with the given amount and returns a transaction ID. Lanaguage = Node.js"
    a8r.io/owner: "Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=paymentservice&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, emailservice.boutique, checkoutservice.boutique, recommendationservice.boutique, paymentservice.boutique, productcatalogservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/productcatalogservice:v0.3.1
        ports:
        - containerPort: 3550
          name: grpc
        env:
        - name: PORT
          value: "3550"
        - name: JAEGER_SERVICE_ADDR
          value: "otel-collector.monitoring:14268"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        resources:
          requests:
            cpu: 70m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: boutique
  annotations:
    a8r.io/description: "Provides the list of products from a JSON file and ability to search products and get individual products. Lanaguage = Go"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=productcatalogservice&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/cartservice:v0.3.1
        ports:
        - containerPort: 7070
          name: grpc
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        - name: PORT
          value: "7070"
        - name: LISTEN_ADDR
          value: "0.0.0.0"
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: boutique
  annotations:
    a8r.io/description: "Stores the items in the user's shopping cart in Redis and retrieves it. Lanaguage = C#"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=cartservice&var-namespace=boutique&refresh=1m"   # Update with appropriate value
    a8r.io/dependencies: "currencyservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
      annotations:
        # getambassador.io/inject-traffic-agent: enabled
        # getambassador.io/inject-traffic-agent-grpc: "true"
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/currencyservice:v0.3.1
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        # - name: DISABLE_DEBUGGER
        #   value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 70m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: boutique
  annotations:
    a8r.io/description: "Converts one money amount to another currency. Uses real values fetched from European Central Bank. It's the highest QPS service. Lanaguage = Node.js"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&refresh=1m&var-namespace=boutique&var-deployment=currencyservice&var-inbound=All&var-outbound=All" # Update with appropriate value
    a8r.io/dependencies: "cartservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, shippingservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - name: server
        image: agervais/shippingservice:v0.3.1
        ports:
        - containerPort: 50051
          name: grpc
        env:
        - name: PORT
          value: "50051"
        - name: JAEGER_SERVICE_ADDR
          value: "otel-collector.monitoring:14268"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        # - name: DISABLE_PROFILER
        #   value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 70m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: boutique
  annotations:
    a8r.io/description: "Gives shipping cost estimates based on the shopping cart. Ships items to the given address (mock) Lanaguage = Go"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=shippingservice&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "cartservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, checkoutservice.boutique, adservice.boutique, redis-cart.boutique"
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  namespace: boutique
  annotations:
    a8r.io/description: "Database for cartservice.boutique"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=redis-cart&var-namespace=boutique&refresh=1m"  # Update with appropriate value
    a8r.io/dependencies: "cartservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, checkoutservice.boutique, adservice.boutique, shippingservice.boutique"
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: boutique
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      annotations:
        # getambassador.io/inject-traffic-agent: enabled
        # getambassador.io/inject-traffic-agent-grpc: "true"
      labels:
        app: adservice
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: agervais/adservice:v0.3.1
        ports:
        - containerPort: 9555
          name: grpc
        env:
        - name: PORT
          value: "9555"
        # - name: DISABLE_STATS
        #   value: "1"
        # - name: DISABLE_TRACING
        #   value: "1"
        - name: JAEGER_SERVICE_ADDR
          value: "otel-collector.monitoring:14268"
        resources:
          requests:
            cpu: 100m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: boutique
  annotations:
    a8r.io/description: "Database for cartservice.boutique"
    a8r.io/owner: "Sales Engineering - Matt Turner"
    a8r.io/chat: "#ambassador"
    a8r.io/bugs: "https://github.com/datawire/ambassador/issues"
    a8r.io/logs: "https://kibana.getambassador.io"
    a8r.io/documentation: "https://www.getambassador.io/docs/latest/"
    a8r.io/repository: "https://github.com/datawire/service-preview-demo"
    a8r.io/support: "http://d6e.co/slack"
    a8r.io/runbook: "https://www.getambassador.io/docs/latest/topics/running/debugging/"
    a8r.io/incidents: "https://incidents.getambassador.io"
    a8r.io/uptime: "https://demo-aes.com/jaeger/trace/27262d9e851eff1aa886c4fca028af12"  # Update with appropriate value
    a8r.io/performance: "https://linkerd.mturner.k736.net/grafana/d/deployment/linkerd-deployment?orgId=1&var-deployment=adservice&var-namespace=boutique&refresh=1m" # Update with appropriate value
    a8r.io/dependencies: "cartservice.boutique, frontend.boutique, emailservice.boutique, recommendationservice.boutique, paymentservice.boutique, checkoutservice.boutique, cartservice.boutique, checkoutservice.boutique, redis-cart.boutique, shippingservice.boutique"
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: grpc
---